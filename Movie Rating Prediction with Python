# Movie Rating Prediction with Python

# 1. Import libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# 2. Load dataset
# Example: Suppose your dataset has columns like:
# ["Title", "Genre", "Director", "Actors", "Budget", "BoxOffice", "Rating"]
df = pd.read_csv("movies.csv")

print("Dataset preview:")
print(df.head())

# 3. Select features and target
features = ["Genre", "Director", "Actors", "Budget", "BoxOffice"]
target = "Rating"

df = df[features + [target]]

# 4. Handle missing values
df.fillna({"Genre": "Unknown", "Director": "Unknown", "Actors": "Unknown"}, inplace=True)
df["Budget"].fillna(df["Budget"].median(), inplace=True)
df["BoxOffice"].fillna(df["BoxOffice"].median(), inplace=True)

# 5. Convert categorical variables into numeric
df = pd.get_dummies(df, columns=["Genre", "Director", "Actors"], drop_first=True)

# 6. Split dataset
X = df.drop(target, axis=1)
y = df[target]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 7. Build model
model = LinearRegression()
model.fit(X_train, y_train)

# 8. Make predictions
y_pred = model.predict(X_test)

# 9. Evaluate model
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))
